// This file is auto-generated by @hey-api/openapi-ts

export type GetApiSensorsByIdData = {
  /**
   * The sensor ID
   */
  id: string;
};

export type GetApiSensorsByIdResponse = {
  id?: string;
  batteryStatus?: number;
  inputTime?: string;
  isOpen?: boolean;
};

export type PutApiSensorsByIdData = {
  /**
   * The sensor ID
   */
  id: string;
  requestBody: {
    batteryStatus?: number;
    isOpen?: boolean;
  };
};

export type PutApiSensorsByIdResponse = {
  message?: string;
};

export type GetApiSensorsByOfficeIdData = {
  /**
   * The ID of the office to filter sensors by.
   */
  officeId: string;
};

export type GetApiSensorsByOfficeIdResponse = Array<{
  id?: string;
  name?: string;
  officeId?: string;
  inputTime?: string;
}>;

export type GetApiSensorsResponse = Array<{
  id?: string;
  batteryStatus?: number;
  inputTime?: string;
  isOpen?: boolean;
}>;

export type GetApiUsersByIdData = {
  /**
   * The user ID
   */
  id: string;
};

export type GetApiUsersByIdResponse = {
  id?: string;
  accountType?: 'Admin' | 'Maintainer' | 'User' | 'Guest';
  email?: string;
  name?: string;
  officeId?: string;
  password?: string;
  pronouns?: string;
  userSettings?: string;
  title?: string;
  department?: string;
  avatar?: string;
  isPublic?: boolean;
  available?: 'Available' | 'NotAvailable' | 'Private';
};

export type PutApiUsersByIdData = {
  /**
   * The user ID
   */
  id: string;
  requestBody: {
    [key: string]: unknown;
  };
};

export type PutApiUsersByIdResponse = {
  message?: string;
};

export type GetApiUsersByIdWorkingBlockData = {
  /**
   * The ID of the user to retrieve the working block for.
   */
  id: string;
};

export type GetApiUsersByIdWorkingBlockResponse = {
  id?: string;
  userId?: string;
  startTime?: string;
};

export type GetApiUsersGetAllPublicAndAvailableResponse = Array<{
  id?: string;
  accountType?: number;
  email?: string;
  name?: string;
  officeId?: string;
  password?: string;
  pronouns?: string;
  userSettings?: string;
}>;

export type GetApiUsersResponse = Array<{
  id?: string;
  accountType?: number;
  email?: string;
  name?: string;
  officeId?: string;
  password?: string;
  pronouns?: string;
  userSettings?: string;
}>;

export type $OpenApiTs = {
  '/api/sensors/{id}': {
    get: {
      req: GetApiSensorsByIdData;
      res: {
        /**
         * The sensor object.
         */
        200: {
          id?: string;
          batteryStatus?: number;
          inputTime?: string;
          isOpen?: boolean;
        };
        /**
         * Invalid sensor ID
         */
        400: unknown;
        /**
         * Sensor not found
         */
        404: unknown;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
    put: {
      req: PutApiSensorsByIdData;
      res: {
        /**
         * Sensor updated successfully
         */
        200: {
          message?: string;
        };
        /**
         * Invalid sensor ID or request body
         */
        400: unknown;
        /**
         * Sensor not found
         */
        404: unknown;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
  '/api/sensors/byOfficeId': {
    get: {
      req: GetApiSensorsByOfficeIdData;
      res: {
        /**
         * A list of sensors for the specified office ID.
         */
        200: Array<{
          id?: string;
          name?: string;
          officeId?: string;
          inputTime?: string;
        }>;
        /**
         * Invalid office ID provided.
         */
        400: unknown;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
  '/api/sensors': {
    get: {
      res: {
        /**
         * A list of sensors.
         */
        200: Array<{
          id?: string;
          batteryStatus?: number;
          inputTime?: string;
          isOpen?: boolean;
        }>;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
  '/api/users/{id}': {
    get: {
      req: GetApiUsersByIdData;
      res: {
        /**
         * The user object.
         */
        200: {
          id?: string;
          accountType?: 'Admin' | 'Maintainer' | 'User' | 'Guest';
          email?: string;
          name?: string;
          officeId?: string;
          password?: string;
          pronouns?: string;
          userSettings?: string;
          title?: string;
          department?: string;
          avatar?: string;
          isPublic?: boolean;
          available?: 'Available' | 'NotAvailable' | 'Private';
        };
        /**
         * Invalid user ID
         */
        400: unknown;
        /**
         * User not found
         */
        404: unknown;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
    put: {
      req: PutApiUsersByIdData;
      res: {
        /**
         * User updated successfully
         */
        200: {
          message?: string;
        };
        /**
         * Invalid user ID
         */
        400: unknown;
        /**
         * User not found
         */
        404: unknown;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
  '/api/users/{id}/workingBlock': {
    get: {
      req: GetApiUsersByIdWorkingBlockData;
      res: {
        /**
         * Working block found successfully.
         */
        200: {
          id?: string;
          userId?: string;
          startTime?: string;
        };
      };
    };
  };
  '/api/users/getAllPublicAndAvailable': {
    get: {
      res: {
        /**
         * A list of users.
         */
        200: Array<{
          id?: string;
          accountType?: number;
          email?: string;
          name?: string;
          officeId?: string;
          password?: string;
          pronouns?: string;
          userSettings?: string;
        }>;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
  '/api/users': {
    get: {
      res: {
        /**
         * A list of users.
         */
        200: Array<{
          id?: string;
          accountType?: number;
          email?: string;
          name?: string;
          officeId?: string;
          password?: string;
          pronouns?: string;
          userSettings?: string;
        }>;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
};
